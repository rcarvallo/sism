@{
    ViewData["Title"] = "Pagina de Inicio";
}

<div class="text-center">
    <h1 class="display-4">BIENVENIDOS A SISM</h1>
</div>

<!-- Contenido de la Pagina -->
<div class="content-wrapper">
    <!-- Contenido del Encabezado (Pagina del Encabezado) -->
    <section class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1>DASHBOARD</h1>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="#">Inicio</a></li>
                        <li class="breadcrumb-item active">Dashboard</li>
                    </ol>
                </div>
            </div>
        </div>
    </section>

    <!-- Contenido Principal -->
    <section class="content">
        <div class="row mt-2">
            <div class="col-sm-6">
                <div class="card">
                    <div class="card-header">Graficos Resumen Dqo(mg/l)</div>
                    <div class="card-body">
                        <canvas id="chartDqo" class="chart tab-pane active" style="position: relative; height:300px;"></canvas>
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="card">
                    <div class="card-header">Graficos Resumen Flujo(CuFt/s)</div>
                    <div class="card-body">
                        <canvas id="chartFlujo" class="chart tab-pane active" style="position: relative; height:300px;"></canvas>
                    </div>
                </div>
            </div>
            <div class="col-sm-12">
                <div class="card">
                    <div class="card-header">Graficos Resumen Toneladas</div>
                    <div class="card-body">
                        <canvas id="chartTon" class="chart tab-pane active" style="position: relative; height:300px;"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>

@section Scripts{
    <script>
        function resumenDqo() {
            fetch("../Dqo/resumenDqo")
                .then((response) => {
                    return response.ok ? response.json() : Promise.reject(response);
                })
                .then((dataJson) => {
                    console.log(dataJson)


                    const labels = dataJson.map((item) => { return item.hora })
                    const values = dataJson.map((item) => { return item.valor })


                    console.log(labels)
                    console.log(values)

                    const data = {
                        labels: labels,
                        datasets: [{
                            label: 'Valor',
                            data: values,
                            fill: false,
                            borderColor: 'rgb(163, 35, 37)',
                            tension: 0.1
                        }]
                    };

                    const config = {
                        type: 'line',
                        data: data,
                        options: {
                            scales: {
                                xAxes: [{
                                    type: 'time',
                                    time: {
                                        unit: 'day',
                                        displayFormats: {
                                            day: 'DD/MM/YYYY'
                                        }
                                    },

                                    ticks: {
                                        fontSize: 14
                                    }
                                }],

                                yAxes: [{
                                    ticks: {
                                        fontSize: 15
                                    }
                                }]
                            }
                        }
                    };

                    const canvasLinea = document.getElementById("chartDqo");
                    const graficoLinea = new Chart(canvasLinea, config)

                }).catch((error) => {
                    console.log("error")
                })
        }

        $(document).ready(() => {
            resumenDqo()
        })

        function resumenFlujo() {
            fetch("../Flujo/resumenFlujo")
                .then((response) => {
                    return response.ok ? response.json() : Promise.reject(response);
                })
                .then((dataJson) => {
                    console.log(dataJson)

                    const labels = dataJson.map((item) => { return item.hora })
                    const values = dataJson.map((item) => { return item.valor })

                    console.log(labels)
                    console.log(values)

                    const data = {
                        labels: labels,
                        datasets: [{
                            label: 'Valor',
                            data: values,
                            fill: false,
                            borderColor: 'rgb(237, 241, 7)'
                        }]
                    };

                    const config = {
                        type: 'line',
                        data: data,
                        options: {
                            scales: {
                                xAxes: [{
                                    type: 'time',
                                    time: {
                                        unit: 'day',
                                        displayFormats: {
                                            day: 'DD/MM/YYYY'
                                        }
                                    },
                                    ticks: {
                                        fontSize: 14
                                    }
                                }],

                                yAxes: [{
                                    ticks: {
                                        fontSize: 15
                                    }
                                }]
                            }
                        }
                    };

                    const canvasLinea2 = document.getElementById("chartFlujo");
                    const graficoLinea2 = new Chart(canvasLinea2, config)

                }).catch((error) => {
                    console.log("error")
                })
        }

        $(document).ready(() => {
            resumenFlujo()
        })

        function resumenClientes(){

        fetch("../ConsultaClientes/resumenClientes")
        .then((response) => {
                return response.ok? response.json() : Promise.reject(response);
        })
            .then((dataJson) => {
                console.log(dataJson)
                
               const labels = dataJson.map((item) => {return item.fechaYhoraEntrada})
               const values = dataJson.map((item) => {return item.pesTon})

               console.log(labels)
               console.log(values)

                  const data = {
                        labels: labels,
                        datasets: [{
                            label: 'Toneladas',
                            data: values,
                            backgroundColor:'rgb(11, 229, 100)',
                            borderWidth: 1
                        }]
                    };

                    const config = {
                        type: 'bar',
                        data: data,
                        options: {
                            scales: {
                                xAxes: [{
                                    type: 'time',
                                    time: {
                                        unit: 'day',
                                        displayFormats: {
                                            day: 'DD/MM/YYYY'
                                        }
                                    },
                                }],

                                yAxes: [{
                                   
                                }]
                            }
                        },
                    };

                    const canvasBarras = document.getElementById("chartTon")
                    const graficoBarras = new Chart(canvasBarras, config)
            })
    }

      

        

        $(document).ready(() => {
            resumenClientes()
        })

     


    </script>
}
