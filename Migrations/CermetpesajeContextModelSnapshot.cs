// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using sism.Models;

#nullable disable

namespace sism.Migrations
{
    [DbContext(typeof(CermetpesajeContext))]
    partial class CermetpesajeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8_spanish2_ci")
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8");

            modelBuilder.Entity("sism.Models.Acceso", b =>
                {
                    b.Property<int>("Idaccesos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("idaccesos");

                    b.Property<sbyte?>("AdministracionDeValoers")
                        .HasColumnType("tinyint(4)");

                    b.Property<sbyte?>("Archivos")
                        .HasColumnType("tinyint(4)");

                    b.Property<sbyte?>("Camion")
                        .HasColumnType("tinyint(4)");

                    b.Property<sbyte?>("Camiones")
                        .HasColumnType("tinyint(4)");

                    b.Property<sbyte?>("ClienteProveedor")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("Cliente/Proveedor");

                    b.Property<sbyte?>("ClienteProveedor1")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("ClienteProveedor");

                    b.Property<sbyte?>("Conductores")
                        .HasColumnType("tinyint(4)");

                    b.Property<sbyte?>("ConexionServidor")
                        .HasColumnType("tinyint(4)");

                    b.Property<sbyte?>("ControlHorario")
                        .HasColumnType("tinyint(4)");

                    b.Property<sbyte?>("ControlItinerario")
                        .HasColumnType("tinyint(4)");

                    b.Property<sbyte?>("ControlTransferencia")
                        .HasColumnType("tinyint(4)");

                    b.Property<sbyte?>("Estado")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("estado");

                    b.Property<sbyte?>("Generadores")
                        .HasColumnType("tinyint(4)");

                    b.Property<int?>("IdGrupoDeUsuarios")
                        .HasColumnType("int(11)");

                    b.Property<sbyte?>("InformeGeneralDeTickets")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("informeGeneralDeTickets");

                    b.Property<sbyte?>("InformeIngresos")
                        .HasColumnType("tinyint(4)");

                    b.Property<sbyte?>("Informes")
                        .HasColumnType("tinyint(4)");

                    b.Property<sbyte?>("IngresoDe")
                        .HasColumnType("tinyint(4)");

                    b.Property<sbyte?>("IngresoDeTipos")
                        .HasColumnType("tinyint(4)");

                    b.Property<sbyte?>("ListadoModificacion")
                        .HasColumnType("tinyint(4)");

                    b.Property<sbyte?>("Modificacion")
                        .HasColumnType("tinyint(4)");

                    b.Property<sbyte?>("Mop")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("MOP");

                    b.Property<sbyte?>("ParametrosDinamicos")
                        .HasColumnType("tinyint(4)");

                    b.Property<sbyte?>("PermanenciaEnPlanta")
                        .HasColumnType("tinyint(4)");

                    b.Property<sbyte?>("Pesaje")
                        .HasColumnType("tinyint(4)");

                    b.Property<sbyte?>("PesajeComercial")
                        .HasColumnType("tinyint(4)");

                    b.Property<sbyte?>("PesajePorHora")
                        .HasColumnType("tinyint(4)");

                    b.Property<sbyte?>("PesajeTrasferencia")
                        .HasColumnType("tinyint(4)");

                    b.Property<sbyte?>("Pesajetransferencia")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("pesajetransferencia");

                    b.Property<sbyte?>("ReimpresionTicketMop")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("ReimpresionTicket MOP");

                    b.Property<sbyte?>("ReimpresionTickets")
                        .HasColumnType("tinyint(4)");

                    b.Property<sbyte?>("SupervisoresyRamplas")
                        .HasColumnType("tinyint(4)");

                    b.Property<sbyte?>("TipoResiduo")
                        .HasColumnType("tinyint(4)");

                    b.Property<sbyte?>("TiposResiduos")
                        .HasColumnType("tinyint(4)");

                    b.Property<sbyte?>("Transferencia")
                        .HasColumnType("tinyint(4)");

                    b.Property<sbyte?>("Transportes")
                        .HasColumnType("tinyint(4)");

                    b.Property<sbyte?>("Usuarios")
                        .HasColumnType("tinyint(4)");

                    b.HasKey("Idaccesos")
                        .HasName("PRIMARY");

                    b.ToTable("accesos", (string)null);
                });

            modelBuilder.Entity("sism.Models.Cargo", b =>
                {
                    b.Property<int>("IdCargos")
                        .HasColumnType("int(11)")
                        .HasColumnName("idCargos");

                    b.Property<string>("Area")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Cargos")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("IdCargos")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdCargos" }, "idCargos_UNIQUE")
                        .IsUnique();

                    b.ToTable("cargos", (string)null);

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8_spanish_ci");
                });

            modelBuilder.Entity("sism.Models.Chofer", b =>
                {
                    b.Property<int>("Idchofer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("idchofer");

                    b.Property<string>("Direccion")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("Estado")
                        .HasColumnType("int(11)")
                        .HasColumnName("estado");

                    b.Property<string>("Fonos")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Rut")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int?>("Transporte")
                        .HasColumnType("int(11)");

                    b.HasKey("Idchofer")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Idchofer" }, "idchofer")
                        .IsUnique();

                    b.ToTable("chofer", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "latin1");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "latin1_swedish_ci");
                });

            modelBuilder.Entity("sism.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Casilla")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("casilla");

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ciudad");

                    b.Property<string>("ClienteProveedor")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Comuna")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("comuna");

                    b.Property<string>("Direccionfactura")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("direccionfactura");

                    b.Property<int?>("Estado")
                        .HasColumnType("int(1)")
                        .HasColumnName("estado");

                    b.Property<string>("Fax")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("fax");

                    b.Property<string>("FechaPermitidaFin")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("FechaPermitidaInicio")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Giro")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("giro");

                    b.Property<string>("LineaDeCredito")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("linea de credito");

                    b.Property<string>("Razonsocial")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("razonsocial");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("region");

                    b.Property<string>("Rut")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("rut");

                    b.Property<string>("Telefono")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("telefono");

                    b.Property<string>("TipoCliente")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Id" }, "id")
                        .IsUnique();

                    b.ToTable("clientes", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "latin1");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "latin1_swedish_ci");
                });

            modelBuilder.Entity("sism.Models.Clientegenerador", b =>
                {
                    b.Property<int>("IdClienteGenerador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("idClienteGenerador");

                    b.Property<string>("Estado")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("estado");

                    b.Property<string>("IdCliente")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("idCliente");

                    b.Property<string>("IdGenerador")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("idGenerador");

                    b.HasKey("IdClienteGenerador")
                        .HasName("PRIMARY");

                    b.ToTable("clientegenerador", (string)null);
                });

            modelBuilder.Entity("sism.Models.Comuna", b =>
                {
                    b.Property<int>("IdComuna")
                        .HasColumnType("int(11)")
                        .HasColumnName("idComuna");

                    b.Property<string>("Comuna1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Comuna");

                    b.Property<int>("IdRegion")
                        .HasColumnType("int(11)")
                        .HasColumnName("idRegion");

                    b.HasKey("IdComuna")
                        .HasName("PRIMARY");

                    b.ToTable("comuna", (string)null);

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8_general_ci");
                });

            modelBuilder.Entity("sism.Models.Consultacliente", b =>
                {
                    b.Property<string>("CamNumero")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("CAM_NUMERO")
                        .UseCollation("latin1_swedish_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("CamNumero"), "latin1");

                    b.Property<string>("CamPatente")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("CAM_PATENTE");

                    b.Property<int?>("ChfCodigo")
                        .HasColumnType("int(11)")
                        .HasColumnName("CHF_CODIGO")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("ChfNombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("CHF_NOMBRE")
                        .UseCollation("latin1_swedish_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("ChfNombre"), "latin1");

                    b.Property<string>("ChfRut")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("CHF_RUT")
                        .UseCollation("latin1_swedish_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("ChfRut"), "latin1");

                    b.Property<string>("CpvRazonsocial")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("CPV_RAZONSOCIAL")
                        .UseCollation("latin1_swedish_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("CpvRazonsocial"), "latin1");

                    b.Property<string>("CpvRut")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CPV_RUT")
                        .UseCollation("latin1_swedish_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("CpvRut"), "latin1");

                    b.Property<string>("CpvTipo")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("CPV_TIPO");

                    b.Property<int?>("Estado")
                        .HasColumnType("int(11)")
                        .HasColumnName("estado");

                    b.Property<DateOnly?>("FechaEntrada")
                        .HasColumnType("date")
                        .HasColumnName("FECHA_ENTRADA");

                    b.Property<DateOnly?>("FechaSalida")
                        .HasColumnType("date")
                        .HasColumnName("FECHA_SALIDA");

                    b.Property<DateTime?>("FechaYhoraEntrada")
                        .HasColumnType("datetime")
                        .HasColumnName("FechaYHoraEntrada");

                    b.Property<DateTime?>("FechaYhoraSalida")
                        .HasColumnType("datetime");

                    b.Property<string>("FiltroSistema")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("filtroSistema");

                    b.Property<string>("Generador2")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("GENERADOR2");

                    b.Property<int?>("GnrCodigo")
                        .HasColumnType("int(11)")
                        .HasColumnName("GNR_CODIGO")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("GnrDireccion")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("GNR_DIRECCION");

                    b.Property<string>("GnrNombre")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("GNR_NOMBRE");

                    b.Property<string>("GnrRut")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("GNR_RUT");

                    b.Property<TimeOnly?>("HoraEntrada")
                        .HasColumnType("time")
                        .HasColumnName("HORA_ENTRADA");

                    b.Property<TimeOnly?>("HoraSalida")
                        .HasColumnType("time")
                        .HasColumnName("HORA_SALIDA");

                    b.Property<string>("IdOperadorEntrada")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ID_OPERADOR_ENTRADA");

                    b.Property<string>("IdOperadorSalida")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ID_OPERADOR_SALIDA");

                    b.Property<string>("IdSistema")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("ID_SISTEMA");

                    b.Property<string>("Iso14001")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("ISO14001");

                    b.Property<string>("NumSesma")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("NUM_SESMA");

                    b.Property<string>("ObservacionDeEntrada")
                        .HasColumnType("text");

                    b.Property<string>("ObservacionDeSalida")
                        .HasColumnType("text");

                    b.Property<int?>("PesBruto")
                        .HasColumnType("int(11)")
                        .HasColumnName("PES_BRUTO");

                    b.Property<DateTime?>("PesFecha")
                        .HasMaxLength(45)
                        .HasColumnType("datetime(6)")
                        .HasColumnName("PES_FECHA");

                    b.Property<string>("PesFechaent")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("PES_FECHAENT");

                    b.Property<string>("PesFechasal")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("PES_FECHASAL");

                    b.Property<string>("PesHora")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("PES_HORA");

                    b.Property<string>("PesHoraent")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("PES_HORAENT");

                    b.Property<string>("PesHorasal")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("PES_HORASAL");

                    b.Property<int?>("PesLavado")
                        .HasColumnType("int(11)")
                        .HasColumnName("PES_LAVADO")
                        .HasDefaultValueSql("'0'");

                    b.Property<int?>("PesNeto")
                        .HasColumnType("int(11)")
                        .HasColumnName("PES_NETO");

                    b.Property<int>("PesNum")
                        .HasColumnType("int(11)")
                        .HasColumnName("PES_NUM");

                    b.Property<string>("PesPermanencia")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("PES_PERMANENCIA")
                        .UseCollation("utf8mb4_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("PesPermanencia"), "utf8mb4");

                    b.Property<int?>("PesTara")
                        .HasColumnType("int(11)")
                        .HasColumnName("PES_TARA");

                    b.Property<decimal?>("PesTon")
                        .HasPrecision(14, 4)
                        .HasColumnType("decimal(14,4)")
                        .HasColumnName("PES_TON");

                    b.Property<string>("PesTramoHora")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("PES_TRAMO_HORA")
                        .HasDefaultValueSql("''")
                        .UseCollation("utf8mb4_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("PesTramoHora"), "utf8mb4");

                    b.Property<string>("PrdCodigo")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("PRD_CODIGO");

                    b.Property<string>("PrdDescripcion")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("PRD_DESCRIPCION");

                    b.Property<string>("TrnNombre")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("TRN_NOMBRE");

                    b.Property<string>("TrnRut")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("TRN_RUT");

                    b.ToTable((string)null);

                    b.ToView("consultaclientes", (string)null);
                });

            modelBuilder.Entity("sism.Models.Contactocliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Cargo")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("cargo");

                    b.Property<string>("Codarea")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("codarea");

                    b.Property<int>("DsClientesId")
                        .HasColumnType("int(11)")
                        .HasColumnName("ds_clientes_id");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("email");

                    b.Property<int?>("Estado")
                        .HasColumnType("int(1)")
                        .HasColumnName("estado");

                    b.Property<string>("Fax")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fax");

                    b.Property<string>("Movil")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("movil");

                    b.Property<string>("Nombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("nombre");

                    b.Property<string>("Telefonofijo")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("telefonofijo");

                    b.Property<string>("Tipo")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("tipo");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("contactoclientes", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "latin1");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "latin1_swedish_ci");
                });

            modelBuilder.Entity("sism.Models.Detalleproducto", b =>
                {
                    b.Property<int>("IdDetalleProducto")
                        .HasColumnType("int(11)");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int(11)");

                    b.Property<int>("IdPersonal")
                        .HasColumnType("int(11)");

                    b.Property<int>("IdPesaje")
                        .HasColumnType("int(11)")
                        .HasColumnName("idPesaje");

                    b.HasKey("IdDetalleProducto")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdDetalleProducto" }, "IdDetalleProducto")
                        .IsUnique();

                    b.ToTable("detalleproducto", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "latin1");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "latin1_swedish_ci");
                });

            modelBuilder.Entity("sism.Models.Generadore", b =>
                {
                    b.Property<int>("Idgeneradores")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("idgeneradores");

                    b.Property<string>("Contacto")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("direccion");

                    b.Property<string>("Email")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("email");

                    b.Property<int?>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(2)")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("Fonos")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("fonos");

                    b.Property<int?>("IdClientes")
                        .HasColumnType("int(11)")
                        .HasColumnName("idClientes");

                    b.Property<string>("RazonSocial")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("razon social");

                    b.Property<string>("Rut")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("rut");

                    b.HasKey("Idgeneradores")
                        .HasName("PRIMARY");

                    b.ToTable("generadores", (string)null);
                });

            modelBuilder.Entity("sism.Models.Generadores2", b =>
                {
                    b.Property<int>("Idgeneradores2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("idgeneradores2");

                    b.Property<string>("Contacto")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("direccion");

                    b.Property<string>("Email")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("email");

                    b.Property<int?>("Estado")
                        .HasColumnType("int(2)");

                    b.Property<string>("Fonos")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("fonos");

                    b.Property<int?>("IdClientes")
                        .HasColumnType("int(11)")
                        .HasColumnName("idClientes");

                    b.Property<string>("RazonSocial")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("razon social");

                    b.Property<string>("Rut")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("rut");

                    b.HasKey("Idgeneradores2")
                        .HasName("PRIMARY");

                    b.ToTable("generadores2", (string)null);
                });

            modelBuilder.Entity("sism.Models.Gruposusuario", b =>
                {
                    b.Property<int>("IdGruposUsuarios")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("idGruposUsuarios");

                    b.Property<sbyte?>("Estado")
                        .HasColumnType("tinyint(4)");

                    b.Property<string>("GrupoUsuario")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Grupo Usuario");

                    b.HasKey("IdGruposUsuarios")
                        .HasName("PRIMARY");

                    b.ToTable("gruposusuarios", (string)null);
                });

            modelBuilder.Entity("sism.Models.Impresora", b =>
                {
                    b.Property<int>("Idimpresora")
                        .HasColumnType("int(11)")
                        .HasColumnName("idimpresora");

                    b.Property<string>("IdPrograma")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("idPrograma");

                    b.Property<string>("Ip")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("IP");

                    b.Property<string>("Nombre")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("Idimpresora")
                        .HasName("PRIMARY");

                    b.ToTable("impresora", (string)null);
                });

            modelBuilder.Entity("sism.Models.Iso14001", b =>
                {
                    b.Property<int>("Idiso14001")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("idiso14001");

                    b.Property<string>("Estado")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Motivo")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("Idiso14001")
                        .HasName("PRIMARY");

                    b.ToTable("iso14001", (string)null);
                });

            modelBuilder.Entity("sism.Models.Lavado", b =>
                {
                    b.Property<int>("IdLavado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("idLavado");

                    b.Property<string>("FechaHoraIngreso")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("fechaHoraIngreso");

                    b.Property<int?>("FolioPesaje")
                        .HasColumnType("int(11)");

                    b.Property<string>("HoraSalida")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int?>("IdConductor")
                        .HasColumnType("int(11)")
                        .HasColumnName("idConductor");

                    b.Property<int?>("IdGenerador")
                        .HasColumnType("int(11)");

                    b.Property<int?>("IdOperador")
                        .HasColumnType("int(11)")
                        .HasColumnName("idOperador");

                    b.Property<int?>("IdTransporte")
                        .HasColumnType("int(11)");

                    b.Property<string>("Patente")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.HasKey("IdLavado")
                        .HasName("PRIMARY");

                    b.ToTable("lavado", (string)null);
                });

            modelBuilder.Entity("sism.Models.Modificacionpesaje", b =>
                {
                    b.Property<int>("Idmodificacionpesaje")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("idmodificacionpesaje");

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int(11)");

                    b.Property<string>("DescIso14001")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("DescISO14001");

                    b.Property<int?>("Estado")
                        .HasColumnType("int(11)");

                    b.Property<string>("FechaEntrada")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("FechaModificacion")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("FechaSalida")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<DateTime?>("FechaYhoraEntrada")
                        .HasColumnType("datetime")
                        .HasColumnName("FechaYHoraEntrada");

                    b.Property<DateTime?>("FechaYhoraSalida")
                        .HasColumnType("datetime");

                    b.Property<string>("HoraEntrada")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("HoraSalida")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int?>("IdChofer")
                        .HasColumnType("int(11)");

                    b.Property<int?>("IdClienteProveedor")
                        .HasColumnType("int(11)");

                    b.Property<int?>("IdGenerador")
                        .HasColumnType("int(11)")
                        .HasColumnName("idGenerador");

                    b.Property<int?>("IdGenerador2")
                        .HasColumnType("int(11)")
                        .HasColumnName("idGenerador2");

                    b.Property<int?>("IdPatente")
                        .HasColumnType("int(11)");

                    b.Property<int?>("IdTipodeResiduo")
                        .HasColumnType("int(11)")
                        .HasColumnName("idTipodeResiduo");

                    b.Property<int?>("IdTransporte")
                        .HasColumnType("int(11)")
                        .HasColumnName("idTransporte");

                    b.Property<int?>("Idpesaje")
                        .HasColumnType("int(11)")
                        .HasColumnName("idpesaje");

                    b.Property<string>("Impresora")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Iso14001")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("ISO14001");

                    b.Property<string>("LavadoCamion")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Memorandum")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("ModificadoPor")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("ObservacionDeEntrada")
                        .HasColumnType("text");

                    b.Property<string>("ObservacionDeSalida")
                        .HasColumnType("text");

                    b.Property<string>("PapeleraSesma")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Patente")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int?>("Personal")
                        .HasColumnType("int(11)");

                    b.Property<int?>("PersonalSalida")
                        .HasColumnType("int(11)");

                    b.Property<int?>("PesoEntrada")
                        .HasColumnType("int(11)");

                    b.Property<int?>("PesoNeto")
                        .HasColumnType("int(11)");

                    b.Property<int?>("PesoSalida")
                        .HasColumnType("int(11)");

                    b.Property<int?>("Planta")
                        .HasColumnType("int(11)")
                        .HasColumnName("PLANTA");

                    b.Property<int?>("TipoPesaje")
                        .HasColumnType("int(11)");

                    b.HasKey("Idmodificacionpesaje")
                        .HasName("PRIMARY");

                    b.ToTable("modificacionpesaje", (string)null);
                });

            modelBuilder.Entity("sism.Models.Modificacionpesajetransferencium", b =>
                {
                    b.Property<int>("Idmodificacionpesaje")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("idmodificacionpesaje");

                    b.Property<string>("DescIso14001")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("DescISO14001");

                    b.Property<int?>("EditadoPor")
                        .HasColumnType("int(11)");

                    b.Property<int?>("Estado")
                        .HasColumnType("int(11)");

                    b.Property<string>("FechaEdicion")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<DateTime?>("FechaYhoraEntradaEtps")
                        .HasColumnType("datetime")
                        .HasColumnName("FechaYHoraEntradaETPS");

                    b.Property<DateTime?>("FechaYhoraEntradaRellEst")
                        .HasColumnType("datetime")
                        .HasColumnName("FechaYHoraEntradaRellEst");

                    b.Property<DateTime?>("FechaYhoraSalidaEtps")
                        .HasColumnType("datetime")
                        .HasColumnName("FechaYhoraSalidaETPS");

                    b.Property<DateTime?>("FechaYhoraSalidaRellEst")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaYhoraSalidaRelleno")
                        .HasColumnType("datetime")
                        .HasColumnName("FechaYHoraSalidaRelleno");

                    b.Property<DateTime?>("FechaYhoraSalidaTransEst")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechayHoraEntradaRelleno")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdChofer")
                        .HasColumnType("int(11)");

                    b.Property<int?>("IdClienteProveedor")
                        .HasColumnType("int(11)");

                    b.Property<int?>("IdGenerador")
                        .HasColumnType("int(11)")
                        .HasColumnName("idGenerador");

                    b.Property<int?>("IdGenerador2")
                        .HasColumnType("int(11)")
                        .HasColumnName("idGenerador2");

                    b.Property<int?>("IdPatente")
                        .HasColumnType("int(11)");

                    b.Property<int?>("IdTipodeResiduo")
                        .HasColumnType("int(11)")
                        .HasColumnName("idTipodeResiduo");

                    b.Property<int?>("IdTransporte")
                        .HasColumnType("int(11)")
                        .HasColumnName("idTransporte");

                    b.Property<string>("Impresora")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Iso14001")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("ISO14001");

                    b.Property<string>("LavadoCamion")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Memorandum")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("MotivoModificacion")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("ObservacionDeEntrada")
                        .HasColumnType("text");

                    b.Property<string>("ObservacionDeSalida")
                        .HasColumnType("text");

                    b.Property<string>("PapeleraSesma")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Patente")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int?>("Personal")
                        .HasColumnType("int(11)");

                    b.Property<int?>("PersonalSalida")
                        .HasColumnType("int(11)");

                    b.Property<int?>("PesoEntrada")
                        .HasColumnType("int(11)");

                    b.Property<int?>("PesoNeto")
                        .HasColumnType("int(11)");

                    b.Property<int?>("PesoSalida")
                        .HasColumnType("int(11)");

                    b.Property<int?>("Planta")
                        .HasColumnType("int(11)")
                        .HasColumnName("PLANTA");

                    b.Property<string>("Rampla")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Supervisor")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int?>("TipoPesaje")
                        .HasColumnType("int(11)");

                    b.HasKey("Idmodificacionpesaje")
                        .HasName("PRIMARY");

                    b.ToTable("modificacionpesajetransferencia", (string)null);
                });

            modelBuilder.Entity("sism.Models.Patente", b =>
                {
                    b.Property<int>("IdPatente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("idPatente");

                    b.Property<sbyte?>("CamionCsm")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("CamionCSM");

                    b.Property<sbyte?>("CamionMulticliente")
                        .HasColumnType("tinyint(4)");

                    b.Property<sbyte?>("CamionToleranca")
                        .HasColumnType("tinyint(4)");

                    b.Property<int?>("Estado")
                        .HasColumnType("int(11)");

                    b.Property<int?>("IdCliente")
                        .HasColumnType("int(11)");

                    b.Property<int?>("IdGeneradores")
                        .HasColumnType("int(11)")
                        .HasColumnName("idGeneradores");

                    b.Property<int>("IdTransporte")
                        .HasColumnType("int(11)")
                        .HasColumnName("idTransporte");

                    b.Property<string>("Largo")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("largo");

                    b.Property<string>("Numero")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("numero");

                    b.Property<string>("Observaciones")
                        .HasColumnType("text");

                    b.Property<string>("Patente1")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("Patente");

                    b.Property<string>("Patentecarro")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("patentecarro");

                    b.Property<int?>("Tara")
                        .HasColumnType("int(11)");

                    b.Property<string>("Tipo")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("TransferenciaCliente")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasDefaultValueSql("'0'");

                    b.HasKey("IdPatente")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdPatente" }, "idCamion")
                        .IsUnique();

                    b.ToTable("patentes", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "latin1");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "latin1_swedish_ci");
                });

            modelBuilder.Entity("sism.Models.Patentecliente", b =>
                {
                    b.Property<int>("IdPatenteCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("idPatenteCliente");

                    b.Property<string>("Estado")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("estado");

                    b.Property<string>("IdCliente")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("IdPatente")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("idPAtente");

                    b.HasKey("IdPatenteCliente")
                        .HasName("PRIMARY");

                    b.ToTable("patentecliente", (string)null);
                });

            modelBuilder.Entity("sism.Models.Patenteclientetransferencium", b =>
                {
                    b.Property<int>("IdPatenteCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("idPatenteCliente");

                    b.Property<string>("Estado")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("estado");

                    b.Property<string>("IdCliente")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("IdPatente")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("idPAtente");

                    b.HasKey("IdPatenteCliente")
                        .HasName("PRIMARY");

                    b.ToTable("patenteclientetransferencia", (string)null);
                });

            modelBuilder.Entity("sism.Models.Patentememorandum", b =>
                {
                    b.Property<int>("IdPatenteMemorandum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("idPatenteMemorandum");

                    b.Property<string>("Estado")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("FechaEmision")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("FechaFin")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("FechaInicio")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Folio")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int?>("IdCliente")
                        .HasColumnType("int(11)")
                        .HasColumnName("idCliente");

                    b.Property<int?>("IdPatente")
                        .HasColumnType("int(11)");

                    b.Property<string>("Nombre")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("IdPatenteMemorandum")
                        .HasName("PRIMARY");

                    b.ToTable("patentememorandum", (string)null);
                });

            modelBuilder.Entity("sism.Models.Patentestransferencium", b =>
                {
                    b.Property<int>("IdPatente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("idPatente");

                    b.Property<sbyte?>("CamionCsm")
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("CamionCSM");

                    b.Property<sbyte?>("CamionMulticliente")
                        .HasColumnType("tinyint(4)");

                    b.Property<sbyte?>("CamionToleranca")
                        .HasColumnType("tinyint(4)");

                    b.Property<int?>("Estado")
                        .HasColumnType("int(11)");

                    b.Property<int?>("IdCliente")
                        .HasColumnType("int(11)");

                    b.Property<int?>("IdGeneradores")
                        .HasColumnType("int(11)")
                        .HasColumnName("idGeneradores");

                    b.Property<int>("IdTransporte")
                        .HasColumnType("int(11)")
                        .HasColumnName("idTransporte");

                    b.Property<string>("Largo")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("largo");

                    b.Property<string>("Numero")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("numero");

                    b.Property<string>("Observaciones")
                        .HasColumnType("text");

                    b.Property<string>("Patente")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Patentecarro")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("patentecarro");

                    b.Property<int?>("Tara")
                        .HasColumnType("int(11)");

                    b.Property<string>("Tipo")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("TransferenciaCliente")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasDefaultValueSql("'0'");

                    b.HasKey("IdPatente")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdPatente" }, "idCamion")
                        .IsUnique()
                        .HasDatabaseName("idCamion1");

                    b.ToTable("patentestransferencia", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "latin1");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "latin1_swedish_ci");
                });

            modelBuilder.Entity("sism.Models.Patentetransporte", b =>
                {
                    b.Property<int>("IdPatenteTransporte")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("idPatenteTransporte");

                    b.Property<string>("Estado")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("estado");

                    b.Property<string>("IdPatente")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("idPAtente");

                    b.Property<string>("IdTransporte")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("idTransporte");

                    b.HasKey("IdPatenteTransporte")
                        .HasName("PRIMARY");

                    b.ToTable("patentetransporte", (string)null);
                });

            modelBuilder.Entity("sism.Models.Pesaje", b =>
                {
                    b.Property<int>("IdPesaje")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("idPesaje");

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int(11)");

                    b.Property<string>("DescIso14001")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("DescISO14001");

                    b.Property<int?>("Estado")
                        .HasColumnType("int(11)");

                    b.Property<string>("FechaEntrada")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("FechaSalida")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<DateTime?>("FechaYhoraEntrada")
                        .HasColumnType("datetime")
                        .HasColumnName("FechaYHoraEntrada");

                    b.Property<DateTime?>("FechaYhoraSalida")
                        .HasColumnType("datetime");

                    b.Property<string>("HoraEntrada")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("HoraSalida")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int?>("IdChofer")
                        .HasColumnType("int(11)");

                    b.Property<int?>("IdClienteProveedor")
                        .HasColumnType("int(11)");

                    b.Property<int?>("IdGenerador")
                        .HasColumnType("int(11)")
                        .HasColumnName("idGenerador");

                    b.Property<int?>("IdGenerador2")
                        .HasColumnType("int(11)")
                        .HasColumnName("idGenerador2");

                    b.Property<int?>("IdPatente")
                        .HasColumnType("int(11)");

                    b.Property<int?>("IdTipodeResiduo")
                        .HasColumnType("int(11)")
                        .HasColumnName("idTipodeResiduo");

                    b.Property<int?>("IdTransporte")
                        .HasColumnType("int(11)")
                        .HasColumnName("idTransporte");

                    b.Property<string>("Impresora")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Iso14001")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("ISO14001");

                    b.Property<string>("LavadoCamion")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Memorandum")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("ObservacionDeEntrada")
                        .HasColumnType("text");

                    b.Property<string>("ObservacionDeSalida")
                        .HasColumnType("text");

                    b.Property<string>("PapeleraSesma")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Patente")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int?>("Personal")
                        .HasColumnType("int(11)");

                    b.Property<int?>("PersonalSalida")
                        .HasColumnType("int(11)");

                    b.Property<int?>("PesoEntrada")
                        .HasColumnType("int(11)");

                    b.Property<int?>("PesoNeto")
                        .HasColumnType("int(11)");

                    b.Property<int?>("PesoSalida")
                        .HasColumnType("int(11)");

                    b.Property<int?>("Planta")
                        .HasColumnType("int(11)")
                        .HasColumnName("PLANTA");

                    b.Property<int?>("TipoPesaje")
                        .HasColumnType("int(11)");

                    b.HasKey("IdPesaje")
                        .HasName("PRIMARY");

                    b.ToTable("pesaje", (string)null);
                });

            modelBuilder.Entity("sism.Models.Pesajetransferencium", b =>
                {
                    b.Property<int>("IdPesaje")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("idPesaje");

                    b.Property<string>("DescIso14001")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("DescISO14001");

                    b.Property<int?>("Estado")
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("FechaYhoraEntradaEtps")
                        .HasColumnType("datetime")
                        .HasColumnName("FechaYHoraEntradaETPS");

                    b.Property<DateTime?>("FechaYhoraEntradaRellEst")
                        .HasColumnType("datetime")
                        .HasColumnName("FechaYHoraEntradaRellEst");

                    b.Property<DateTime?>("FechaYhoraSalidaEtps")
                        .HasColumnType("datetime")
                        .HasColumnName("FechaYhoraSalidaETPS");

                    b.Property<DateTime?>("FechaYhoraSalidaRellEst")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaYhoraSalidaRelleno")
                        .HasColumnType("datetime")
                        .HasColumnName("FechaYHoraSalidaRelleno");

                    b.Property<DateTime?>("FechaYhoraSalidaTransEst")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechayHoraEntradaRelleno")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdChofer")
                        .HasColumnType("int(11)");

                    b.Property<int?>("IdClienteProveedor")
                        .HasColumnType("int(11)");

                    b.Property<int?>("IdGenerador")
                        .HasColumnType("int(11)")
                        .HasColumnName("idGenerador");

                    b.Property<int?>("IdGenerador2")
                        .HasColumnType("int(11)")
                        .HasColumnName("idGenerador2");

                    b.Property<int?>("IdPatente")
                        .HasColumnType("int(11)");

                    b.Property<int?>("IdTipodeResiduo")
                        .HasColumnType("int(11)")
                        .HasColumnName("idTipodeResiduo");

                    b.Property<int?>("IdTransporte")
                        .HasColumnType("int(11)")
                        .HasColumnName("idTransporte");

                    b.Property<string>("Impresora")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Iso14001")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("ISO14001");

                    b.Property<string>("LavadoCamion")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Memorandum")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("ObservacionDeEntrada")
                        .HasColumnType("text");

                    b.Property<string>("ObservacionDeSalida")
                        .HasColumnType("text");

                    b.Property<string>("PapeleraSesma")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Patente")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int?>("Personal")
                        .HasColumnType("int(11)");

                    b.Property<int?>("PersonalSalida")
                        .HasColumnType("int(11)");

                    b.Property<int?>("PesoEntrada")
                        .HasColumnType("int(11)");

                    b.Property<int?>("PesoNeto")
                        .HasColumnType("int(11)");

                    b.Property<int?>("PesoSalida")
                        .HasColumnType("int(11)");

                    b.Property<int?>("Planta")
                        .HasColumnType("int(11)")
                        .HasColumnName("PLANTA");

                    b.Property<string>("Rampla")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Supervisor")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int?>("TipoPesaje")
                        .HasColumnType("int(11)");

                    b.HasKey("IdPesaje")
                        .HasName("PRIMARY");

                    b.ToTable("pesajetransferencia", (string)null);
                });

            modelBuilder.Entity("sism.Models.Planta", b =>
                {
                    b.Property<int>("IdPlantas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("idPlantas");

                    b.Property<string>("NombrePlanta")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("IdPlantas")
                        .HasName("PRIMARY");

                    b.ToTable("plantas", (string)null);
                });

            modelBuilder.Entity("sism.Models.Plantasprog", b =>
                {
                    b.Property<int>("IdPlantasProg")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("idPlantasProg");

                    b.Property<string>("IdPlanta")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("idPlanta");

                    b.Property<string>("IdPrograma")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("idPrograma");

                    b.HasKey("IdPlantasProg")
                        .HasName("PRIMARY");

                    b.ToTable("plantasprog", (string)null);
                });

            modelBuilder.Entity("sism.Models.Producto", b =>
                {
                    b.Property<int>("Idproducto")
                        .HasColumnType("int(11)")
                        .HasColumnName("idproducto");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("descripcion");

                    b.Property<string>("Producto1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Producto");

                    b.HasKey("Idproducto")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Idproducto" }, "idproducto")
                        .IsUnique();

                    b.ToTable("producto", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "latin1");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "latin1_swedish_ci");
                });

            modelBuilder.Entity("sism.Models.Rampla", b =>
                {
                    b.Property<int>("IdRampla")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("idRampla");

                    b.Property<string>("Estado")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Rampla1")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("Rampla");

                    b.HasKey("IdRampla")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Rampla1" }, "Rampla_UNIQUE")
                        .IsUnique();

                    b.ToTable("rampla", (string)null);
                });

            modelBuilder.Entity("sism.Models.Regione", b =>
                {
                    b.Property<int>("IdRegion")
                        .HasColumnType("int(11)")
                        .HasColumnName("id_Region");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdRegion")
                        .HasName("PRIMARY");

                    b.ToTable("regiones", (string)null);

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8_general_ci");
                });

            modelBuilder.Entity("sism.Models.Residuo", b =>
                {
                    b.Property<int>("IdResiduos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("idResiduos");

                    b.Property<string>("Codigo")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int?>("Estado")
                        .HasColumnType("int(11)");

                    b.Property<string>("Guia")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("IdResiduos")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdResiduos" }, "idResiduos_UNIQUE")
                        .IsUnique();

                    b.ToTable("residuos", (string)null);
                });

            modelBuilder.Entity("sism.Models.Serial", b =>
                {
                    b.Property<int>("IdSerial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("idSerial");

                    b.Property<string>("Comm")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int?>("FinString")
                        .HasColumnType("int(11)");

                    b.Property<string>("IdPc")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("IdPC");

                    b.Property<string>("Indicador")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("indicador");

                    b.Property<int?>("InicioString")
                        .HasColumnType("int(11)");

                    b.Property<int?>("LargoString")
                        .HasColumnType("int(11)");

                    b.Property<string>("Marca")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("marca");

                    b.Property<string>("Modelo")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("modelo");

                    b.Property<string>("Observacion")
                        .HasColumnType("text");

                    b.Property<string>("Serie")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdSerial")
                        .HasName("PRIMARY");

                    b.ToTable("serial", (string)null);
                });

            modelBuilder.Entity("sism.Models.Supervisore", b =>
                {
                    b.Property<int>("IdSupervisores")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("idSupervisores");

                    b.Property<string>("Estado")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Supervisor")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("IdSupervisores")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Supervisor" }, "Supervisor_UNIQUE")
                        .IsUnique();

                    b.ToTable("supervisores", (string)null);
                });

            modelBuilder.Entity("sism.Models.Tipocliente", b =>
                {
                    b.Property<int>("IdTipoCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("idTipoCliente");

                    b.Property<int?>("ClieProv")
                        .HasColumnType("int(11)");

                    b.Property<string>("Estado")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("estado");

                    b.Property<string>("Nombre")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("IdTipoCliente")
                        .HasName("PRIMARY");

                    b.ToTable("tipocliente", (string)null);
                });

            modelBuilder.Entity("sism.Models.Transferencium", b =>
                {
                    b.Property<string>("CamNumero")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("CAM_NUMERO")
                        .UseCollation("latin1_swedish_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("CamNumero"), "latin1");

                    b.Property<string>("CamPatente")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("CAM_PATENTE");

                    b.Property<int?>("ChfCodigo")
                        .HasColumnType("int(11)")
                        .HasColumnName("CHF_CODIGO");

                    b.Property<string>("ChfNombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("CHF_NOMBRE")
                        .UseCollation("latin1_swedish_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("ChfNombre"), "latin1");

                    b.Property<string>("ChfRut")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("CHF_RUT")
                        .UseCollation("latin1_swedish_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("ChfRut"), "latin1");

                    b.Property<string>("CpvRazonsocial")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("CPV_RAZONSOCIAL")
                        .UseCollation("latin1_swedish_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("CpvRazonsocial"), "latin1");

                    b.Property<string>("CpvRut")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CPV_RUT")
                        .UseCollation("latin1_swedish_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("CpvRut"), "latin1");

                    b.Property<string>("CpvTipo")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CPV_TIPO")
                        .UseCollation("latin1_swedish_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("CpvTipo"), "latin1");

                    b.Property<int?>("GnrCodigo")
                        .HasColumnType("int(11)")
                        .HasColumnName("GNR_CODIGO")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("GnrDireccion")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("GNR_DIRECCION");

                    b.Property<string>("GnrNombre")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("GNR_NOMBRE");

                    b.Property<string>("GnrRut")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("GNR_RUT");

                    b.Property<string>("Hora1")
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("HORA1")
                        .UseCollation("utf8mb4_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Hora1"), "utf8mb4");

                    b.Property<string>("Hora2")
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("HORA2")
                        .UseCollation("utf8mb4_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Hora2"), "utf8mb4");

                    b.Property<string>("Hora3")
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("HORA3")
                        .UseCollation("utf8mb4_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Hora3"), "utf8mb4");

                    b.Property<string>("Hora4")
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("HORA4")
                        .UseCollation("utf8mb4_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Hora4"), "utf8mb4");

                    b.Property<string>("IdOperadorEntrada")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ID_OPERADOR_ENTRADA");

                    b.Property<string>("IdOperadorSalida")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ID_OPERADOR_SALIDA");

                    b.Property<int?>("IdSistema")
                        .HasColumnType("int(11)")
                        .HasColumnName("ID_SISTEMA");

                    b.Property<string>("NumSesma")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("NUM_SESMA");

                    b.Property<string>("ObservacionDeEntrada")
                        .HasColumnType("text");

                    b.Property<int?>("PesBruto")
                        .HasColumnType("int(11)")
                        .HasColumnName("PES_BRUTO");

                    b.Property<DateTime?>("PesFechaHora")
                        .HasColumnType("datetime")
                        .HasColumnName("PES_FECHA_HORA");

                    b.Property<string>("PesFechaentrada")
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("PES_FECHAENTRADA")
                        .UseCollation("utf8mb4_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("PesFechaentrada"), "utf8mb4");

                    b.Property<string>("PesFechasalida")
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("PES_FECHASALIDA")
                        .UseCollation("utf8mb4_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("PesFechasalida"), "utf8mb4");

                    b.Property<string>("PesHoraentrada")
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("PES_HORAENTRADA")
                        .UseCollation("utf8mb4_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("PesHoraentrada"), "utf8mb4");

                    b.Property<string>("PesHorasalida")
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("PES_HORASALIDA")
                        .UseCollation("utf8mb4_general_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("PesHorasalida"), "utf8mb4");

                    b.Property<int?>("PesNeto")
                        .HasColumnType("int(11)")
                        .HasColumnName("PES_NETO");

                    b.Property<int>("PesNum")
                        .HasColumnType("int(11)")
                        .HasColumnName("PES_NUM");

                    b.Property<TimeOnly?>("PesPermanencia")
                        .HasColumnType("time")
                        .HasColumnName("PES_PERMANENCIA");

                    b.Property<int?>("PesTara")
                        .HasColumnType("int(11)")
                        .HasColumnName("PES_TARA");

                    b.Property<decimal?>("PesTon")
                        .HasPrecision(14, 4)
                        .HasColumnType("decimal(14,4)")
                        .HasColumnName("PES_TON");

                    b.Property<int?>("PrdCodigo")
                        .HasColumnType("int(11)")
                        .HasColumnName("PRD_CODIGO");

                    b.Property<string>("PrdDescripcion")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("PRD_DESCRIPCION")
                        .UseCollation("latin1_swedish_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("PrdDescripcion"), "latin1");

                    b.Property<string>("Rampla")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("RAMPLA");

                    b.Property<string>("SupNombre")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("SUP_NOMBRE");

                    b.Property<string>("TrnNombre")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("TRN_NOMBRE");

                    b.Property<string>("TrnRut")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("TRN_RUT");

                    b.ToTable((string)null);

                    b.ToView("transferencia", (string)null);
                });

            modelBuilder.Entity("sism.Models.Transporte", b =>
                {
                    b.Property<int>("IdTransportes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("idTransportes");

                    b.Property<string>("Contacto")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("direccion");

                    b.Property<string>("Email")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("email");

                    b.Property<int?>("Estado")
                        .HasColumnType("int(2)");

                    b.Property<string>("Fonos")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("fonos");

                    b.Property<string>("RazonSocial")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("razonSocial");

                    b.Property<string>("Rut")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("rut");

                    b.HasKey("IdTransportes")
                        .HasName("PRIMARY");

                    b.ToTable("transportes", (string)null);
                });

            modelBuilder.Entity("sism.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuarios")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("idUsuarios");

                    b.Property<string>("Clave")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<sbyte?>("Estado")
                        .HasColumnType("tinyint(4)");

                    b.Property<int?>("IdGrupoUsuario")
                        .HasColumnType("int(11)")
                        .HasColumnName("idGrupoUsuario");

                    b.Property<string>("NombreUsuario")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdUsuarios")
                        .HasName("PRIMARY");

                    b.ToTable("usuarios", (string)null);
                });

            modelBuilder.Entity("sism.Models.Vistalavado", b =>
                {
                    b.Property<string>("CamNumero")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("CAM_NUMERO");

                    b.Property<string>("ChfNombre")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("CHF_NOMBRE")
                        .UseCollation("latin1_swedish_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("ChfNombre"), "latin1");

                    b.Property<string>("CpvRazonsocial")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("CPV_RAZONSOCIAL")
                        .UseCollation("latin1_swedish_ci");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("CpvRazonsocial"), "latin1");

                    b.Property<string>("LavFechaIng")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("LAV_FECHA_ING");

                    b.Property<string>("LavFechaSal")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("LAV_FECHA_SAL");

                    b.Property<int>("LavNum")
                        .HasColumnType("int(11)")
                        .HasColumnName("LAV_NUM");

                    b.Property<int?>("PesNum")
                        .HasColumnType("int(11)")
                        .HasColumnName("PES_NUM")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("TrnNombre")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("TRN_NOMBRE");

                    b.ToTable((string)null);

                    b.ToView("vistalavado", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
